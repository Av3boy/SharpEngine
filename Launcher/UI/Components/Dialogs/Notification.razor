@using Launcher.Services
@inherits DialogBase

@inject INotificationService NotificationService

<div style="width: 100%; height: 100%; position: absolute; pointer-events: none;">
    <div style="position: relative; display: flex; top: 50px; flex-direction: column; align-items: end;">
    @foreach (var notification in NotificationService.Notifications)
    {
        <div class="alert alert-@(Type.ToCssClass())" role="alert" style="pointer-events: auto;">
            @notification.Key @(notification.Value > 1 ? $"({notification.Value})" : "")
            <DiscardIcon DiscardClicked="@(() => NotificationService.Discard(notification.Key))" />
        </div>
    }
    </div>
</div>

@code {
    /// <summary>Gets or sets the type of the notification.</summary>
    [Parameter]
    public NotificationType Type { get; set; } = NotificationType.Warning;

    /// <inheritdoc />
    protected override void OnInitialized()
    {
        NotificationService.SetInvokeAsync(InvokeAsync);
        NotificationService.SetOnNotificationsChanged(StateHasChanged);
    }
}
